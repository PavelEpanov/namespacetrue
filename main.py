X = 11 # Глобальное имя / атрибут модуля

def f():
    print(X) # Доступ к глобальному имени X(11)

def g():
    X = 22 # Локальная переменная в функции(X, скрывает X в модуле)
    print(X)

class C:
    X = 33 # Атрибут класса C.X
    def m(self):
        X = 44 # Локальная переменная в методе (X)
        self.X = 55 # Атрибут экземпляра (экземпляр.X)

if __name__ == "__main__":
    print(X) # 11: имя из модуля (оно же mynames.X за пределами файла)
    f() # 11: Глобальное имя
    g() # 22: Локальное имя
    print(X) # Имя из модуля не изменилось

    obj = C() # Сздать экземпляр
    print(obj.X) # 33: имя из класса, унаследованное экземпляром

    obj.m() # Присоединения имени атрибута X к экземпляру
    print(obj.X) # 55: имя из экземпляра
    print(C.X) # 33: имя из класса (Оно же obj.X, если X в экземпляре отсутствует)

    print(C.m.X) # ERROR! видимо только в методе
    print(g.X) # ERROR! видимо только в функции

